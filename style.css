@font-face {
    font-family: "ThemeVCK Text";
    src: url("fonts/themevck_text/themevck-text.ttf");
}

html, body {
    height: 100%;
    margin: 0;
    /* font-family: 'Google Sans', sans-serif, system-ui; */
    /*
    font-family: "Noto Serif", serif;
    font-optical-sizing: auto;
    font-style: normal;
    font-variation-settings:
    "wdth" 100;
    */

    font-family: "IBM Plex Sans", system-ui;
    font-weight: 400;
    font-style: normal;

    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;

}


#wrapper {
    height: 100%;

}


/*
#back-ground {
    --vheight: 100vh;
    --vwidth: 100vw;

    height: 100%;
    background: radial-gradient(circle at 50% calc(100vh / 2), white 0, white 15vw, rgb(225, 225, 255), rgb(150, 150, 150) calc(50vh / sin( atan( calc(50vh / 50vw) ) )) );
}
*/

#back-ground {
    /*overflow-y: scroll;*/
    --vheight: 100vh;
    --vwidth: 100vw;

    height: auto;
    background: radial-gradient(circle at 50% calc(100vh / 2), white 0, white 15vw, rgb(225, 225, 255), rgb(150, 150, 150) var(--radial-end));
}

#floating-space {
    scroll-snap-align: center;
    scroll-snap-stop: always;

    top: 0%;
    left: 0%;
    height: 100vh;
    width: 100%;

    display: flex;
    justify-content: center;
    align-items:    center;

}

#my-icon {
    width: 200px;
    border-radius: 50%;

}

@media (prefers-reduced-motion: no-preference) {
  #my-icon {
    animation: clockwise-spin 24s infinite linear;
  }

  .text-ring {
    animation: anti-clockwise-spin 24s infinite linear;
  }

  @keyframes clockwise-spin {
    to {
      rotate: 360deg;
    }
  }

  @keyframes anti-clockwise-spin {
    to {
      rotate: -360deg;
    }
  }
}


.text-ring {
    position: absolute;
    /* position: fixed; */
}

.text-ring [style*=--index] {
    --character-width: 1.3; /* In "ch" units */
    --inner-angle:  calc((360 / var(--total)) * 1deg);
    --radius:       calc((var(--character-width, 1) / sin(var(--inner-angle))) * -1ch);
    font-weight:    900;
    font-family:    "ThemeVCK Text";
    font-size:      calc(var(--font-size, 2.2) * 1rem);
    position:       absolute;
    top:    50%;
    left:   50%;
    transform:
        translate(-50%, -50%)
        rotate(calc(var(--inner-angle) * var(--index)))
        translateY(var(--radius, -5ch));
}

#buttons-box {
    position: absolute;

    width: min(100%, 30cm);
    height: min(100%, 22cm);
}

.my-button {
    position: absolute;

    text-decoration: none;
    color: black;
}

.my-button[style*=--x][style*=--y]:active {
    /* (ver dps)
       https://stackoverflow.com/questions/68512069/css-force-animation-to-be-fully-completed-on-click-active-or-focus
    */
}

.my-button[style*=--x][style*=--y]:hover {
    text-shadow: 0px 0px 80px;

    animation: none;
    transform: scale(1.4);
}

.my-button[style*=--x][style*=--y] {
    display: flex;
    justify-content: center; /* Centraliza horizontalmente */
    align-items: center;     /* Centraliza verticalmente */

    font-family: "ThemeVCK Text";
    font-size: 30px;

    --width: 28px;
    --height: 28px;
    height: var(--height);
    width:  var(--width);


    top:  calc(50% + var(--y) - var(--height) / 2 );
    left: calc(50% + var(--x) - var(--width)  / 2 );

    
    transition: text-shadow .3s;

    border: none;
    background: none;

    cursor: pointer;
    z-index: 1;


}

/* conditional aniamtion (depends on the OS's accessibility settings) */
@media (prefers-reduced-motion: no-preference) {
    .my-button[style*=--x][style*=--y] {
        --factor: 1;
        animation: floating calc( 5s + 1s * var(--factor)) ease-in-out infinite;
    }

    @keyframes floating {
        0%   { transform: translate(0,    0px) scale(1.2); }
        50%  { transform: translate(5px, 15px)           ; }
        100% { transform: translate(0,   -0px) scale(1.2); }    
    }
}


.body-wrapper {
    width: 100vw;
    display: flex;
    align-items: center;
    flex-direction: column;

}

.main-body {
    width: min(30cm, 100%);
    height: auto;
    display: flex;
    flex-direction: column;


    background-color: white;
    border-radius: 20px;

    scroll-snap-align: start;
    scroll-snap-stop: always;
}

.header-area {

    width: 100vw;
    height: 120px;

    display: flex;
    justify-content: center;
    align-items: center;

}

.main-header {
    position: sticky;
    top: -1px;

    width: 100vw;
    /* width: min(30cm, 100%); */
    height: 100px;

    /* margin-bottom: 23px; */

    background: rgb(235, 235, 235);

    text-align: center;

    display: flex;
    justify-content: space-between;
    align-items: center;

    transition: opacity .2s;

    opacity: 0;

    border-bottom-left-radius:  10px;
    border-bottom-right-radius: 10px;

    border-bottom: 3px solid rgb(80, 80, 80);

    z-index: 3;
    /* color: rgb(80, 80, 80); */
}

.main-header.isSticky{
    opacity: 1;
}

#icon-box {
    width: 100px;
    display: flex;
    justify-content: center;
    align-items: center;

}

.main-header img {
    height: 70px;
    cursor: pointer;
}

/*
 * https://pixelcorners.lukeb.co.uk/?radius=9&multiplier=4&border=1&border_width=1&border_color=#000000
 */

.pixel-corners,
.pixel-corners--wrapper {
  clip-path: polygon(0px calc(100% - 24px),
    4px calc(100% - 24px),
    4px calc(100% - 16px),
    8px calc(100% - 16px),
    8px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 8px),
    16px calc(100% - 8px),
    16px calc(100% - 4px),
    24px calc(100% - 4px),
    24px 100%,
    calc(100% - 24px) 100%,
    calc(100% - 24px) calc(100% - 4px),
    calc(100% - 16px) calc(100% - 4px),
    calc(100% - 16px) calc(100% - 8px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 8px) calc(100% - 16px),
    calc(100% - 4px) calc(100% - 16px),
    calc(100% - 4px) calc(100% - 24px),
    100% calc(100% - 24px),
    100% 24px,
    calc(100% - 4px) 24px,
    calc(100% - 4px) 16px,
    calc(100% - 8px) 16px,
    calc(100% - 8px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 8px,
    calc(100% - 16px) 8px,
    calc(100% - 16px) 4px,
    calc(100% - 24px) 4px,
    calc(100% - 24px) 0px,
    24px 0px,
    24px 4px,
    16px 4px,
    16px 8px,
    12px 8px,
    12px 12px,
    8px 12px,
    8px 16px,
    4px 16px,
    4px 24px,
    0px 24px);
  position: relative;
}
.pixel-corners {
  border: 4px solid transparent;
}

.pixel-corners--wrapper {
  width: fit-content;
  height: fit-content;
}

.pixel-corners--wrapper .pixel-corners {
  display: block;
  clip-path: polygon(4px 24px,
    8px 24px,
    8px 16px,
    12px 16px,
    12px 12px,
    16px 12px,
    16px 8px,
    24px 8px,
    24px 4px,
    calc(100% - 24px) 4px,
    calc(100% - 24px) 8px,
    calc(100% - 16px) 8px,
    calc(100% - 16px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 16px,
    calc(100% - 8px) 16px,
    calc(100% - 8px) 24px,
    calc(100% - 4px) 24px,
    calc(100% - 4px) calc(100% - 24px),
    calc(100% - 8px) calc(100% - 24px),
    calc(100% - 8px) calc(100% - 16px),
    calc(100% - 12px) calc(100% - 16px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 16px) calc(100% - 12px),
    calc(100% - 16px) calc(100% - 8px),
    calc(100% - 24px) calc(100% - 8px),
    calc(100% - 24px) calc(100% - 4px),
    24px calc(100% - 4px),
    24px calc(100% - 8px),
    16px calc(100% - 8px),
    16px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 16px),
    8px calc(100% - 16px),
    8px calc(100% - 24px),
    4px calc(100% - 24px));
}
.pixel-corners::after,
.pixel-corners--wrapper::after {
  content: "";
  position: absolute;
  clip-path: polygon(0px calc(100% - 24px),
    4px calc(100% - 24px),
    4px calc(100% - 16px),
    8px calc(100% - 16px),
    8px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 8px),
    16px calc(100% - 8px),
    16px calc(100% - 4px),
    24px calc(100% - 4px),
    24px 100%,
    calc(100% - 24px) 100%,
    calc(100% - 24px) calc(100% - 4px),
    calc(100% - 16px) calc(100% - 4px),
    calc(100% - 16px) calc(100% - 8px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 8px) calc(100% - 16px),
    calc(100% - 4px) calc(100% - 16px),
    calc(100% - 4px) calc(100% - 24px),
    100% calc(100% - 24px),
    100% 24px,
    calc(100% - 4px) 24px,
    calc(100% - 4px) 16px,
    calc(100% - 8px) 16px,
    calc(100% - 8px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 8px,
    calc(100% - 16px) 8px,
    calc(100% - 16px) 4px,
    calc(100% - 24px) 4px,
    calc(100% - 24px) 0px,
    24px 0px,
    24px 4px,
    16px 4px,
    16px 8px,
    12px 8px,
    12px 12px,
    8px 12px,
    8px 16px,
    4px 16px,
    4px 24px,
    0px 24px,
    0px 50%,
    4px 50%,
    4px 24px,
    8px 24px,
    8px 16px,
    12px 16px,
    12px 12px,
    16px 12px,
    16px 8px,
    24px 8px,
    24px 4px,
    calc(100% - 24px) 4px,
    calc(100% - 24px) 8px,
    calc(100% - 16px) 8px,
    calc(100% - 16px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 16px,
    calc(100% - 8px) 16px,
    calc(100% - 8px) 24px,
    calc(100% - 4px) 24px,
    calc(100% - 4px) calc(100% - 24px),
    calc(100% - 8px) calc(100% - 24px),
    calc(100% - 8px) calc(100% - 16px),
    calc(100% - 12px) calc(100% - 16px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 16px) calc(100% - 12px),
    calc(100% - 16px) calc(100% - 8px),
    calc(100% - 24px) calc(100% - 8px),
    calc(100% - 24px) calc(100% - 4px),
    24px calc(100% - 4px),
    24px calc(100% - 8px),
    16px calc(100% - 8px),
    16px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 16px),
    8px calc(100% - 16px),
    8px calc(100% - 24px),
    4px calc(100% - 24px),
    4px 50%,
    0px 50%);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: transparent;
  display: block;
  pointer-events: none;

  transition: background 0.2s;
}
.pixel-corners::after {
  margin: -4px;
}

.pixel-corners:hover::after,
.pixel-corners--wrapper:hover::after {
    /* color of the pixel-corners*/
    background: rgb(80, 80, 80);
}

.main-header img:hover {
    /* border: 3px solid rgb(120, 120, 120); */
}

.main-header ul {
    margin-right: 30px;
}

.main-header li {
    font-family: "ThemeVCK Text";
    font-size: 20px;

    display: inline;

    margin-left: 20px;

    cursor: pointer;
    transition: text-shadow 0.3s;
}

.main-header li:hover {
    text-shadow: 0px 0px 40px;
}

.main-header li a {
    all: unset;
}

.text-area {
    margin-left: 10%;
    margin-right: 10%;

    text-align: justify;
}

.text-area .text-header, .text-footer {
    font-family: "ThemeVCK Text";
    height: 200px;
    display: flex;
}

.text-area .text-header {
    font-size: 50px;

    align-items: end;

    border-bottom: 6px solid;
    padding-bottom: 15px;
    margin-bottom: 40px;
}

.text-area p {
    text-justify: auto;
}

.text-area .text-footer {
    justify-content: center;

    font-size: 40px;
    height: auto;
    text-align: center;
    margin-top: 70px;
    margin-bottom: 10px;
}

.projects-container {
    display: flex;
    justify-content: space-evenly;
    align-content: flex-start;
    flex-wrap: wrap;
    row-gap: 50px;

    width: 100%;
}

.project-content > a {
    text-decoration: none;
    color: black;
}

/*
.projects-container .pixel-corners--wrapper:hover {
    transform: scale(1.05);
    box-shadow: 0 0 11px rgb(120,120,120);
}
*/

.project-wrapper {
    position: relative;
    width: 40%;
    transition: transform 0.2s, box-shadow 0.2s;

    display: flex;
    justify-content: center;
    align-items: center;

    margin: -15px;
    padding: 15px;
}

.project-wrapper .project-wrapper--shadow {
    position: absolute;
    color: white; 
    --pixel-border-width: 55px;
    width: calc(100% - var(--pixel-border-width));
    height: calc(100% - var(--pixel-border-width));

    border-radius: 40px;

}

.project-wrapper:hover {
    transform: scale(1.05);
    .project-wrapper--shadow {
        transform: scale(1.05);
        box-shadow: 0 0 25px rgb(120,120,120);
    }

    .project-footer {
    border-top: 3px solid rgb(80, 80, 80);
}

}

.project-wrapper .project-wrapper--shadow:hover {
}

.project-wrapper > .pixel-corners--wrapper {
    width: 100%;
    height: 100%;

    background-color: rgb(180, 180, 180);

    z-index: 1;
}




.project-content {
    height: 300px;
    border: 2px solid rgb(80, 80, 80);
    border-radius: 20px;
    overflow: hidden;
    background-color: white;
}


.project-content, .project-img img {
    border-top-right-radius: 20px;
    border-top-left-radius: 20px;
}
.project-img, .project-footer {
    width: 100%;
    transform: inherit;
}
.project-img {
    height: 70%;

    display: flex;
    align-items: center;
    justify-content: center;

    clip-path: inset(0 0 0 0 round 17px 17px 0 0);
}

.project-img img {
    max-height: 100%;
}

.project-footer {
    height: 30%;

    border-top: 3px solid rgb(180, 180, 180);

    background-color: rgb(235, 235, 235);

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    transition: border-top 0.2s;
}

.project-title {
    width: 100%;

    font-weight: 500;
    font-size: 22px;
    text-align: center;

}

.project-description {
    width: 80%;

    font-size: 13px;

    text-align: center;

    margin-bottom: 10px;
}

.project-title, .project-description {
}


#blob {
	background: radial-gradient(rgb(110, 110, 110), transparent);

    --blob-size: 100px;

	filter: blur(calc(var(--blob-size)/2.15));
	
	width: var(--blob-size);
	height: var(--blob-size);

	position: absolute;
	left: 50%;
	top: 50%;
	translate: -50% -50%;

	border-radius: 50%;
}


#bottom {
    scroll-snap-align: end;
    display: flex;
    justify-content: center;
    align-items:     center;

    width: 100%;
    height: 100px;
    background-color: red;

    font: 1.2rem "Fira Sans", sans-serif;
    color: white;
}
